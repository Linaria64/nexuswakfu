---
interface Mob {
  name: string;
  mechanics?: string;
  spells?: Array<{
    name: string;
    description: string;
  }>;
}

interface Room {
  roomNumber: number;
  mobs: Mob[];
}

interface Props {
  rooms: Room[];
}

const { rooms } = Astro.props;
---

<div class="rooms-container">
  {rooms.map((room) => (
    <div class="room-card">
      <div class="room-header">
        <span class="room-number">{room.roomNumber}</span>
        <span class="room-title">Salle {room.roomNumber}</span>
      </div>
      <div class="room-content p-4">
        {room.mobs.map((mob) => (
          <div class="mob-card">
            <span class="mob-name">{mob.name}</span>
            {mob.mechanics && (
              <div class="mob-mechanics">
                <span class="mechanics-label">MÃ©canique:</span>
                {mob.mechanics}
              </div>
            )}
            {mob.spells && mob.spells.length > 0 && (
              <div class="mob-spells">
                <div class="spells-label">Sorts:</div>
                <ul class="spells-list">
                  {mob.spells.map((spell) => (
                    <li class="spell-item">
                      <span class="spell-name">{spell.name}:</span> {spell.description}
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  ))}
</div> 
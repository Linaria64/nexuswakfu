---
import { A } from '@/components/ui/composant';
import { getCollection } from 'astro:content';
import Layout from '../layouts/layout.astro';
import '../styles/global.css';

// R√©cup√©rer les donn√©es des collections
const classes = await getCollection('classes');
const donjons = await getCollection('donjons');
// Artefacts de Wakfu avec leurs liens Method Wakfu
const artifacts: Artifact[] = [
    {
        name: "Boussole de Traverse ( li√©e √† la d√©ese f√©ca)",
        imageUrl: "/images/artifacts/boussole.png",
        location: "Astrub",
        questLevel: 10,
        description: "Pour r√©cup√©rer la Boussole, vous devez √™tre niveau 10 et compl√©ter la qu√™te principale de la Cit√© d'Astrub.",
        methodWakfuUrl: "https://methodwakfu.com/quetes/principales/astrub/"
    },
    {
        name: "Ocarina Draconique (Li√© au Dieu Osamodas)",
        imageUrl: "/images/artifacts/ocarina.png",
        location: "Qu√™te Principale des Nations",
        questLevel: 44,
        description: "Pour r√©cup√©rer l'Ocarina, vous devez √™tre niveau 44 et avoir compl√©t√© la Qu√™te Principale des Nations.",
        methodWakfuUrl: "https://methodwakfu.com/quetes/principales/plage-zinit/"
    },
    {
        name: "Sceptre Excarn√© (Li√© au Dieu Sram)",
        imageUrl: "/images/artifacts/sceptre.png",
        location: "Domaine Sauvage",
        questLevel: 50,
        description: "Pour r√©cup√©rer le Sceptre, vous devez √™tre niveau 50 et vous rendre au Domaine Sauvage et compl√©ter la qu√™te principale.",
        methodWakfuUrl: "https://methodwakfu.com/quetes/principales/domaine-sauvage/"
    },
    {
        name: "Papattes Ecaflip (Li√© au Dieu Ecaflip)",
        imageUrl: "/images/artifacts/pacotilles.png",
        location: "Kelba",
        questLevel: 65,
        description: "Pour r√©cup√©rer les Papattes d‚ÄôEcaflip, vous devez √™tre niveau 65 et vous rendre √† Kelba et compl√©ter la qu√™te principale.",
        methodWakfuUrl: "https://methodwakfu.com/quetes/principales/kelba/"
    },
    {
        name: "Baguette Rikiki (Li√© √† la D√©esse Eniripsa)",
        imageUrl: "/images/artifacts/baguette.png",
        location: "l‚Äô√éle aux Moines",
        questLevel: 80,
        description: "Pour r√©cup√©rer la Baguette Rikiki, vous devez vous dirigez vers l‚Äô√éle aux Moines. L√† bas, vous aurez besoin d‚Äôun groupe de 4 personnages minimum afin de faire le donjon ¬´ Le Sliptorium ¬ª et d‚Äôouvrir le coffre secret ! Faites le donjon normalement jusqu‚Äô√† la salle du Boss. Petit conseil : √âvitez les sorts qui vous co√ªtent des points de Wakfu o√π vous subirez de lourds d√©g√¢ts !",
        methodWakfuUrl: "https://nexuswakfu.vercel.app/donjons"
    },
    {
        name: "Amulette Luminescente (Li√© au Dieu Sadida)",
        imageUrl: "/images/artifacts/amulette.png",
        location: "Bilbiza",
        questLevel: 85,
        description: "	Pour r√©cup√©rer l‚ÄôAmulette Luminescente, vous devez √™tre niveau 85 et vous rendre √† Bilbyza et compl√©ter la qu√™te principale. Note : Si vous l‚Äôavez d√©j√† compl√©t√©e, il vous suffit de refaire l‚Äô√©tape du Show Gelax (√† votre droite dans la Gelaxi√®me Dimension).",
        methodWakfuUrl: "https://methodwakfu.com/quetes/principales/bilbyza/"
    },
    {
        name: "Spieds Rebonttis (Li√© au Dieu Iop)",
        imageUrl: "/images/artifacts/sablier.png",
        location: "Saharach",
        questLevel: 115,
        description: "	Pour r√©cup√©rer les Spieds Rebonttis, vous devez √™tre niveau 115 et vous rendre √† Saharach et compl√©ter la qu√™te principale.",
        methodWakfuUrl: "https://methodwakfu.com/quetes/principales/saharach/"
    },
    {
        name: "Awc d‚Äôappwoche Wayal (Li√© √† la D√©esse Cr√¢)",
        imageUrl: "/images/artifacts/arc.png",
        location: "√éle des Wabbits",
        questLevel: 120,
        description: "Pour r√©cup√©rer l‚ÄôAwc d‚Äôappwoche Wayal, vous devez √™tre niveau 120 et vous rendre sur l‚Äô√éle des Wabbits et compl√©ter la qu√™te principale.",
        methodWakfuUrl: "https://methodwakfu.com/quetes/principales/ile-des-wabbits/"
    },
    {
        name: "S.I.D. (Li√© au Dieu Enutrof)",
        imageUrl: "/images/artifacts/sie.png",
        location: "Enutrosor",
        questLevel: 145,
        description: "Pour r√©cup√©rer le S.I.D., vous devez √™tre niveau 145 et vous rendre √† Enutrosor et compl√©ter la qu√™te principale.",
        methodWakfuUrl: "https://methodwakfu.com/quetes/principales/enutrosor/"
    },
    {
        name: "Sablier de X√©lor (Li√© au Dieu X√©lor)",
        imageUrl: "/images/artifacts/sablier-xelor.png",
        location: "Xelorium Pass√©",
        questLevel: 155,
        description: "Pour r√©cup√©rer le Sablier, vous devez √™tre niveau 155 et vous rendre au X√©lorium Pass√© et compl√©ter la qu√™te principale.",
        methodWakfuUrl: "https://methodwakfu.com/guides-quetes/xelorium-passe/"
    }
];


// Variable pour le carousel des classes
let currentIndex = 0;

// D√©finir les statistiques du site
const stats = [
  { label: "Classes", value: classes.length, icon: "üë§" },
  { label: "Donjons", value: donjons.filter(d => d.data && d.data.name).length, icon: "üè∞" },
  { label: "Artefacts", value: artifacts.length, icon: "‚ú®" }
];

// D√©finir les fonctionnalit√©s
const features = [
  {
    title: "Classes",
    description: "D√©couvrez les 18 classes uniques de Wakfu et leurs sp√©cificit√©s",
    icon: "üë§",
    link: "/classe"
  },
  {
    title: "Donjons",
    description: "Strat√©gies et astuces pour tous les donjons du niveau 1 au 230",
    icon: "üè∞",
    link: "/donjons"
  },
  {
    title: "Artefacts",
    description: "Explorez les 10 artefacts divins essentiels √† votre progression",
    icon: "‚ú®",
    link: "#artifacts"
  }
];

  interface Artifact {
    name: string;
    imageUrl: string;
    location: string;
    questLevel: number;
    description: string;
    methodWakfuUrl: string;
}


---

<Layout title="Accueil"> 




<div class="min-h-screen flex flex-col">
  <!-- Hero Section avec effet glassmorphism am√©lior√© -->
  <div class="relative min-h-screen flex flex-col items-center justify-center overflow-hidden ">
    
    <!-- Motif g√©om√©trique subtil en arri√®re-plan -->
    <div class="absolute inset-0 opacity-5" style="background-image: url('/images/patterns/grid.svg'); background-size: 30px;"></div>
    
    
    <div class="container  mx-auto relative z-10 flex flex-col items-center justify-center  px-4 rounded-md w3/4 border-white/20">
      <div class="flex flex-col items-center justify-center text-center max-w-4xl mx-auto w-full">
        <!-- En-t√™te avec effet de texte am√©lior√© -->
        <div class="mb-8">
          <h1 class="text-6xl md:text-8xl font-bold tracking-tight relative inline-block">
            <span class="bg-clip-text text-transparent bg-gradient-to-r from-cyan-300 to-cyan-400 drop-shadow-[0_2px_2px_rgba(0,0,0,0.3)]">Nexus</span> 
            <span class="text-white drop-shadow-[0_2px_2px_rgba(0,0,0,0.3)]">Wakfu</span>
            <!-- √âl√©ment d√©coratif sous le titre -->
            <div class="absolute -bottom-4 left-1/2 transform -translate-x-1/2 w-24 h-1 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full"></div>
          </h1>
        </div>
        
        <!-- Description avec effet glassmorphism am√©lior√© -->
        <div class="glass-card bg-white/10  border border-white/20 shadow-cyan-900/10 w-2xl mx-auto mb-12 bg-gradient-to-b from-[#0f0c29]/50 via-[#302b63]/50 to-[#24243e]/50 shadow-md p-3 rounded-lg backdrop-blur-md">
          <p class="text-lg md:text-xl text-white/90 leading-relaxed">
            Votre <span class="text-cyan-300 font-medium">hub central</span> d'informations pour Wakfu. Trouvez des guides complets, strat√©gies, et acc√©dez aux outils essentiels du jeu depuis une seule plateforme con√ßue pour optimiser votre exp√©rience dans le <span class="text-cyan-300 font-medium">Monde des Douze</span>.
          </p>
        </div>
        
        <!-- CTA Buttons avec style glassmorphism am√©lior√© -->
        <div class="flex flex-wrap gap-6 justify-center">
          <a 
            href="https://naquos.github.io/Gearfu/?itemsId=5580,30223" 
            target="_blank" 
            rel="noopener noreferrer" 
            class="glass-button glass-primary group relative overflow-hidden px-8 py-4 rounded-xl bg-gradient-to-br from-cyan-500/70 to-blue-600/70 backdrop-blur-md border border-white/20 shadow-lg hover:shadow-cyan-500/20 transition-all duration-300"
          >
            <span class="absolute inset-0 bg-gradient-to-r from-cyan-400/0 via-white/10 to-cyan-400/0 -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></span>
            <span class="relative z-10 flex items-center font-medium text-white">Le trieur d'item Gearfu ! 
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"/>
              </svg>
            </span>
          </a>
          


          <a 
            href="https://wakforge.org/characters" 
            target="_blank" 
            class="glass-button glass-primary group relative overflow-hidden px-8 py-4 rounded-xl bg-gradient-to-br from-cyan-500/30 to-blue-600/30 backdrop-blur-md border border-white/20 shadow-lg hover:shadow-cyan-500/20 transition-all duration-300"
          >
            <span  class="absolute inset-0 bg-gradient-to-r from-cyan-400/0 via-white/10 to-cyan-400/0 -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></span>
            <span class="relative z-10 flex items-center font-medium text-white">L'auto builder Wakforge !  
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"/>
              </svg>
            </span>
          </a>


          <a 
            href="https://zenithwakfu.com/builder" 
            target="_blank" 
            class="glass-button glass-primary group relative overflow-hidden px-8 py-4 rounded-xl bg-gradient-to-br from-cyan-500/30 to-blue-600/30 backdrop-blur-md border border-white/20 shadow-lg hover:shadow-cyan-500/20 transition-all duration-300"
          >
            <span  class="absolute inset-0 bg-gradient-to-r from-cyan-400/0 via-white/10 to-cyan-400/0 -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></span>
            <span class="relative z-10 flex items-center font-medium text-white">Le Zenith Builder !  
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"/>
              </svg>
            </span>
          </a>
        </div>
      </div>
    </div>
    
    <!-- Stats bar avec glassmorphism modernis√© -->
    <div class="flex justify-center items-center mt-16 z-20">
      <div class="container mx-auto px-6">
        <!-- Carte principale avec effet glassmorphism am√©lior√© -->
        <div>
          <!-- Effet de brillance subtil -->
          <div class=" inset-0 bg-gradient-to-tr from-cyan-500/0 via-white/5 to-blue-500/0 opacity-0 group-hover:opacity-100 transition-opacity duration-1000"></div>
          
          <div class="flex flex-row flex-wrap justify-around items-stretch">
            {stats.map((stat, index) => {
              // Determine the link based on the stat label
              const link = stat.label === "Classes" ? "/classes" : stat.label === "Donjons" ? "/donjons" : "#";
              
              return (
                <a href={link} class="flex-1 p-4 min-w-[250px] max-h-[250px] group no-underline">
                  <div class="h-full bg-gradient-to-b from-[#0f0c29]/50 via-[#302b63]/50 to-[#24243e]/50 shadow-md p-3 rounded-lg backdrop-blur-md transition-transform duration-300 hover:-translate-y-1">
                    <div class="flex flex-col items-center justify-center p-4 h-full rounded-xl bg-gradient-to-b from-white/5 to-white/0 group-hover:from-white/10 group-hover:to-white/5 transition-all duration-300 border border-white/10 group-hover:border-white/20 shadow-lg">
                      <!-- Ic√¥ne avec animation -->
                      <div class="text-5xl md:text-6xl mb-4 transform group-hover:scale-110 transition-transform duration-300 text-cyan-300 group-hover:text-cyan-200">{stat.icon}</div>
                      
                      <!-- Valeur avec animation de compteur -->
                      <div class="text-5xl md:text-6xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-300 to-blue-300 mb-3">{stat.value}</div>
                      
                      <!-- Label avec effet de surlignage au survol -->
                      <div class="text-base md:text-lg font-medium text-white/70 group-hover:text-white/90 uppercase tracking-wider relative inline-block">
                        {stat.label}
                        <div class="absolute bottom-0 left-0 w-0 h-0.5 bg-cyan-400/50 group-hover:w-full transition-all duration-300"></div>
                      </div>
                    </div>
                  </div>
                </a>
              );
            })}
          </div>
                </div>
              </div>
          
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Section Lore avec glassmorphism moderne et √©pur√© -->
  <section class="py-32 relative overflow-hidden z-10 flex flex-col ">
    <div class="py-32 relative overflow-hidden z-10 flex flex-col ">
      <!-- En-t√™te moderne avec glassmorphism -->
      <div class=" w-1/2 mx-auto bg-gradient-to-b from-[#0f0c29]/50 via-[#302b63]/50 to-[#24243e]/50 shadow-md p-3 rounded-lg backdrop-blur-md  overflow-hidden group transition-all duration-300 hover:shadow-lg hover:shadow-blue-500/10 hover:-translate-y-1 flex flex-col flex-1 min-w-[300px] max-w-[500px]text-center mb-16 ">
        <!-- Titre principal avec effet glassmorphism subtil -->
        <div class="inline-block px-8 py-3 mb-4 ">
          <h2 class="text-4xl md:text-5xl font-bold tracking-tight">
             <span class="text-cyan-400">Explorer</span> le monde de Wakfu
          </h2>
        </div>
        
        <!-- Sous-titre avec effet glassmorphism -->
        <div class="p-6">
          <p class="text-xl text-white/90 leading-relaxed">
            D√©couvrez les Qu√™tes, Donjons et Classes qui composent l'univers de Wakfu. Chaque √©l√©ment est con√ßu pour vous plonger dans une aventure unique et immersive.
          </p>
        </div>
    <!-- Cartes du Lore -->
    <div class="flex flex-col md:flex-row gap-6 justify-center px-4 py-8">
      <!-- Carte 1: Les Origines -->
      <div class="glass-card bg-blue-700/7 backdrop-blur-sm border border-white/10 rounded-xl p-5 hover:border-cyan-400/30 transition-all duration-300 hover:transform hover:-translate-y-1 group w-full md:w-1/3">
        <div class="text-3xl text-cyan-400 mb-3 group-hover:scale-110 transition-transform">üåç</div>
        <h3 class="text-xl font-semibold mb-2 text-white">Les Origines</h3>
        <p class="text-white/80">Le monde de Wakfu est n√© apr√®s le sacrifice d'Ogrest, qui a plong√© le monde dans une √®re chaotique connue sous le nom d'√àre du Wakfu, o√π la magie est omnipr√©sente.</p>
      </div>
      
      <!-- Carte 2: Les Nations -->
      <div class="glass-card bg-blue-700/7 backdrop-blur-sm border border-white/10 rounded-xl p-5 hover:border-cyan-400/30 transition-all duration-300 hover:transform hover:-translate-y-1 group w-full md:w-1/3">
        <div class="text-3xl text-cyan-400 mb-3 group-hover:scale-110 transition-transform">üè∞</div>
        <h3 class="text-xl font-semibold mb-2 text-white">Les Nations</h3>
        <p class="text-white/80">Quatre nations principales se partagent le Monde des Douze: Amakna, Bonta, Brakmar et Sufokia, chacune avec sa propre culture, politique et relation avec les divinit√©s.</p>
      </div>
      
      <!-- Carte 3: Les Dieux -->
      <div class="glass-card bg-blue-700/7 backdrop-blur-sm border border-white/10 rounded-xl p-5 hover:border-cyan-400/30 transition-all duration-300 hover:transform hover:-translate-y-1 group w-full md:w-1/3">
        <div class="text-3xl text-cyan-400 mb-3 group-hover:scale-110 transition-transform">‚ú®</div>
        <h3 class="text-xl font-semibold mb-2 text-white">Les Douze</h3>
        <p class="text-white/80">Le monde est sous la protection des Douze Dieux, chacun repr√©sentant une classe jouable. Leurs disciples parcourent le monde, propageant leurs philosophies et leurs pouvoirs.</p>
      </div>
    </div>
        
              </div>
          </div>
        </div>
      </div>
    </div>
      

            
      <!-- Classes Showcase with 3D Card Carousel -->
      <div class="py-32 relative overflow-hidden z-10">
        <!-- Header with glassmorphism effect -->
        <div class="w-1/2 mx-auto bg-gradient-to-b from-[#0f0c29]/50 via-[#302b63]/50 to-[#24243e]/50 shadow-md p-5 rounded-lg backdrop-blur-md text-center mb-16">
          <h2 class="text-4xl md:text-5xl font-bold tracking-tight">
            Les <span class="text-cyan-400">Classes</span> de Wakfu
          </h2>
          <p class="text-xl text-white/90 leading-relaxed mt-4">
            D√©couvrez les 18 classes uniques du monde de Wakfu, chacune avec ses propres comp√©tences et strat√©gies.
          </p>
        </div>

        <!-- 3D Card Carousel -->
        <div class="classes-carousel mx-auto relative max-w-md px-4 h-[480px]">
          <!-- Card container with 3D perspective -->
          <div class="relative h-full w-full perspective-3d">
            {classes.map((classe, index) => (
              <a 
          href={`/classes/`} 
          class={`class-card absolute inset-0 w-full h-full transition-all duration-700 ease-out transform-gpu ${index === 0 ? 'opacity-100 z-20' : 'opacity-0 z-10'} cursor-pointer`}
          data-index={index}
          data-href={`/classes/`}
              >
          <div class="w-full h-full rounded-xl overflow-hidden shadow-lg transform-gpu transition-all duration-700 hover:scale-[1.03] group">
            <!-- Card content with glassmorphism -->
            <div class="relative w-full h-full bg-gradient-to-b from-blue-900/40 to-indigo-900/40 border border-white/20 backdrop-blur-sm">
              <!-- Class image with gradient overlay -->
              <div class="relative h-3/5 overflow-hidden">
                <img 
            src={classe.data.image || `/images/classes/${classe.slug}.webp`} 
            alt={classe.data.name} 
            class="w-full h-full object-cover object-center scale-105 group-hover:scale-110 transition-transform duration-700"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-blue-900/80 to-transparent"></div>
              </div>
              
              <!-- Class info section -->
              <div class="relative p-6 flex flex-col h-2/5">
                <!-- Class emblem -->
                <div class="absolute -top-10 left-6 w-16 h-16 rounded-full bg-gradient-to-br from-cyan-500 to-blue-700 p-1 shadow-lg transform group-hover:-translate-y-2 transition-transform duration-500">
            <div class="w-full h-full rounded-full bg-gradient-to-br from-blue-800 to-indigo-900 flex items-center justify-center">
              <span class="text-2xl">{classe.data.emoji || "‚ú®"}</span>
            </div>
                </div>
                
                <!-- Class name with gradient text -->
                <h3 class="text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-300 to-blue-300 mt-6 mb-3">
            {classe.data.name}
                </h3>
                
                <!-- Brief description -->
                <p class="text-sm text-white/80 line-clamp-3">
            {classe.data.shortDescription || "D√©couvrez cette classe unique de l'univers Wakfu."}
                </p>
                
                <!-- "D√©couvrir" indicator -->
                <div class="absolute bottom-6 right-6 flex items-center text-sm text-cyan-300 opacity-0 transform translate-x-2 group-hover:opacity-100 group-hover:translate-x-0 transition-all duration-500">
            <span>D√©couvrir</span>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-1" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
                </div>
                
                <!-- 3D floating effects -->
                <div class="absolute top-0 right-0 w-20 h-20 bg-cyan-500/5 rounded-full blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-700"></div>
                <div class="absolute bottom-0 left-0 w-16 h-16 bg-blue-500/5 rounded-full blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-700"></div>
              </div>
            </div>
          </div>
              </a>
            ))}
            
            <!-- Decorative 3D elements -->
            <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full h-full pointer-events-none">
              <div class="w-full h-full animate-slow-spin opacity-50">
          <div class="absolute top-1/4 right-0 w-20 h-1 bg-gradient-to-r from-cyan-500/0 via-cyan-500/30 to-cyan-500/0 rounded-full blur-sm"></div>
          <div class="absolute bottom-1/4 left-0 w-20 h-1 bg-gradient-to-r from-blue-500/0 via-blue-500/30 to-blue-500/0 rounded-full blur-sm"></div>
              </div>
            </div>
          </div>
          
          <!-- Navigation controls with glassmorphism -->
          <div class="flex justify-between w-full absolute top-1/2 -translate-y-1/2 left-0 right-0 px-0 z-30">
            <button id="classPrevBtn" class="w-12 h-12 -ml-6 rounded-full flex items-center justify-center bg-gradient-to-br from-blue-700/50 to-indigo-700/50 backdrop-blur-md border border-white/10 shadow-lg hover:shadow-cyan-500/20 transition-all duration-300 hover:scale-110">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
              </svg>
            </button>
            <button id="classNextBtn" class="w-12 h-12 -mr-6 rounded-full flex items-center justify-center bg-gradient-to-br from-blue-700/50 to-indigo-700/50 backdrop-blur-md border border-white/10 shadow-lg hover:shadow-cyan-500/20 transition-all duration-300 hover:scale-110">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </button>
          </div>
          
          <!-- Indicator dots -->
          <div class="absolute bottom-0 left-0 right-0 flex justify-center gap-2 pb-4 z-30">
            {classes.map((_, index) => (
              <button 
          class={`w-2.5 h-2.5 rounded-full transition-all duration-300 ${index === 0 ? 'bg-cyan-400 scale-125' : 'bg-white/30 hover:bg-white/60'}`}
          data-index={index}
          aria-label={`Voir classe ${index + 1}`}
              ></button>
            ))}
          </div>
        </div>
        
        <!-- View all classes button -->
        <div class="text-center mt-10">
          <a href="/classes" class="inline-flex items-center px-8 py-3 rounded-xl bg-gradient-to-br from-cyan-500/70 to-blue-600/70 backdrop-blur-md border border-white/20 shadow-lg hover:shadow-cyan-500/20 transition-all duration-300 text-white font-medium group">
            Voir Toutes Les Classes
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2 group-hover:translate-x-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </a>
        </div>
            </div>

        </div>
      </div>
    </div>
  </section>





<div class="min-h-screen py-20 " >
    <!-- Header avec effet glassmorphism -->
        <div class="relative mb-12">
            <div class=" w-1/2  mx-auto rounded-xl p-8 ">
                <h1 class="text-5xl font-bold text-center bg-clip-text p-4 text-transparent bg-gradient-to-r from-amber-300 via-amber-400 to-yellow-200">
                    Artefacts Divins
                </h1>
                <p class="text-center text-gray-300 mt-4 max-w-2xl mx-auto">
                    D√©couvrez les artefacts l√©gendaires du monde de Wakfu, objets mystiques li√©s aux divinit√©s et essentiels √† votre progression.
                </p>
            </div>
        </div>
        
        <!-- Artefacts Carousel - Version glassmorphism modernis√©e -->
        <section class="mb-16">
            <!-- Carousel container -->            
            <div class="carousel-container relative overflow-hidden artifact-carousel mx-auto w-full max-w-4xl  bg-gradient-to-b from-[#0f0c29]/50 via-[#302b63]/50 to-[#24243e]/50 shadow-md p-3 rounded-lg backdrop-blur-md">
                <!-- Background glassmorphism effect -->
                
                <!-- Carousel track -->
                <div class="carousel-track flex transition-transform duration-500 ease-out">
                    {artifacts.map((artifact, index) => (
                        <div class="carousel-slide w-full flex-shrink-0 p-4">
                            <a href={artifact.methodWakfuUrl} target="_blank" rel="noopener noreferrer" class="block h-full">
                                <div class="h-full relative overflow-hidden rounded-xl transition-all duration-300 group backdrop-blur-sm bg-white/5 border border-white/10 hover:border-white/30 hover:bg-white/10 hover:shadow-[0_0_15px_rgba(86,153,255,0.15)] hover:-translate-y-1">
                                    <!-- Card content -->
                                    <div class="p-6">
                                        <h3 class="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-300 to-purple-300 mb-2 flex items-center gap-2 group-hover:from-blue-200 group-hover:to-indigo-300 transition-all duration-300">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-400 group-hover:text-indigo-300 transition-colors" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                                            </svg>
                                            {artifact.name}
                                        </h3>
                                        
                                        <!-- Niveau requis -->
                                        <div class="backdrop-blur-sm bg-gradient-to-r from-blue-600/20 to-purple-600/20 text-blue-300 text-xs font-semibold px-3 py-1.5 rounded-full inline-flex items-center mb-3 border border-white/10 shadow-sm">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 text-indigo-400" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z" clip-rule="evenodd" />
                                            </svg>
                                            Niveau {artifact.questLevel}
                                        </div>
                                        
                                        <div class="mt-3 mb-4 relative">
                                            <div class="absolute -left-2 top-0 w-1 h-full bg-gradient-to-b from-blue-400/30 to-purple-500/30 rounded-full"></div>
                                            <p class="text-sm text-blue-200 font-medium mb-1 ml-2">Emplacement:</p>
                                            <p class="text-sm text-gray-300 ml-2 group-hover:text-gray-200 transition-colors">{artifact.location}</p>
                                        </div>
                                        
                                        <!-- Description avec effet glassmorphism -->
                                        <div class="p-3 bg-gradient-to-r from-blue-900/10 to-indigo-900/10 backdrop-blur-sm rounded-lg border border-white/5 mt-1">
                                            <p class="text-sm text-gray-300 leading-relaxed group-hover:text-gray-200 transition-colors">{artifact.description}</p>
                                        </div>
                                    </div>

                                </div>
                            </a>
                        </div>
                    ))}
                </div>
                
                <!-- Carousel indicators avec effet glassmorphism -->
                <div class="carousel-indicators flex justify-center mt-4 space-x-2 absolute bottom-6 left-0 right-0 px-4 py-2">
                    <div class="backdrop-blur-md bg-black/10 rounded-full px-3 py-1.5 inline-flex items-center space-x-3 border border-white/10 shadow-lg">
                        {artifacts.map((_, index) => (
                            <button class="carousel-indicator w-2.5 h-2.5 rounded-full bg-white/30 hover:bg-white/60 transition-all duration-200 hover:scale-125" data-index={index}></button>
                        ))}
                    </div>
                </div>
            </div>
        </section>
    </main>
</div>


  <!-- Section Call to Action moderne avec glassmorphism -->
  <section class="py-32 relative overflow-hidden z-10 flex flex-col">
      
      <!-- Motif g√©om√©trique subtil -->
      <div class="absolute inset-0 opacity-5 z-0" style="background-image: url('/images/patterns/dots.svg'); background-size: 30px;"></div>
      
      <!-- √âl√©ments d√©coratifs pour plus de profondeur -->
      <div class="absolute top-1/4 right-1/3 w-96 h-96 rounded-full bg-cyan-600/5 blur-3xl animate-pulse-slow"></div>
      <div class="absolute bottom-1/4 left-1/3 w-96 h-96 rounded-full bg-blue-600/5 blur-3xl animate-pulse-slow" style="animation-delay: 1.5s;"></div>
    </div>
    
    <div class="container mx-auto px-6 flex flex-col items-center">
      <!-- Carte CTA principale avec glassmorphism am√©lior√© -->
      <div class="glass-card rounded-lg bg-blue-900/7 max-w-4xl mx-auto relative overflow-hidden w-full flex flex-col items-center">
        <!-- √âl√©ment d√©coratif sup√©rieur -->
        <div class="absolute -top-20 -right-20 w-40 h-40 rounded-full bg-cyan-400/10 blur-2xl"></div>
        <!-- √âl√©ment d√©coratif inf√©rieur -->
        <div class="absolute -bottom-20 -left-20 w-40 h-40 rounded-full bg-blue-400/10 blur-2xl"></div>
        
        <div class="py-12 px-8 relative z-10 flex flex-col items-center">
          <!-- Titre principal avec effet moderne -->
          <h2 class="text-4xl md:text-5xl font-bold mb-6 text-white text-center">
            Rejoignez l'Aventure <span class="text-cyan-400">D√®s Maintenant</span>
          </h2>
          
          <!-- Ligne s√©paratrice anim√©e -->
          <div class="h-1 w-20 bg-gradient-to-r from-cyan-500/70 to-blue-500/70 mx-auto mb-8 rounded-full"></div>
          
          <!-- Texte descriptif -->
          <p class="text-xl text-white/80 leading-relaxed mb-10 max-w-2xl mx-auto">
            Plongez dans l'univers fascinant de Wakfu, fa√ßonnez le monde selon vos choix et devenez une l√©gende dans cette aventure √©pique.
          </p>
          
          <!-- Boutons d'action -->
          <div class="flex flex-col sm:flex-row gap-6 justify-center w-full max-w-2xl">
            <!-- Bouton principal -->
            <A href="https://www.wakfu.com/fr/mmorpg/telecharger">
              <span class="relative z-10 flex items-center">
                T√©l√©charger Wakfu 
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2 group-hover:translate-y-1 transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              </span>
            </A>
            
          </div>
        </div>
      </div>
    </div>
  </section>
</div>

</Layout>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize all carousels on the page
    const carousels = document.querySelectorAll('.carousel-container');
    
    carousels.forEach(carousel => {
        const track = carousel.querySelector('.carousel-track');
        const slides = carousel.querySelectorAll('.carousel-slide');
        const prevButton = carousel.querySelector('.carousel-button.prev');
        const nextButton = carousel.querySelector('.carousel-button.next');
        const indicators = carousel.querySelectorAll('.carousel-indicator');
        
        let currentSlide = 0;
        const slideCount = slides.length;
        
        // Set initial active indicator
        if (indicators.length > 0) {
            indicators[0].classList.add('bg-amber-500', 'w-6');
        }
        
        // Function to update the track transform
        function updateTrack() {
            if (track) {
                (track as HTMLElement).style.transform = `translateX(-${currentSlide * 100}%)`;
                
                // Update indicators
                indicators.forEach((indicator, index) => {
                    if (index === currentSlide) {
                        indicator.classList.add('bg-blue-400', 'scale-125');
                        indicator.classList.remove('bg-white/30');
                    } else {
                        indicator.classList.remove('bg-blue-400', 'scale-125');
                        indicator.classList.add('bg-white/30');
                    }
                });
            }
        }
        
        // Next button click
        nextButton?.addEventListener('click', () => {
            currentSlide = (currentSlide + 1) % slideCount;
            updateTrack();
        });
        
        // Previous button click
        prevButton?.addEventListener('click', () => {
            currentSlide = (currentSlide - 1 + slideCount) % slideCount;
            updateTrack();
        });
        
        // Indicator clicks
        indicators.forEach((indicator, index) => {
            indicator.addEventListener('click', () => {
                currentSlide = index;
                updateTrack();
            });
        });
        
        // Touch support for swiping
        let touchStartX = 0;
        let touchEndX = 0;
        
        if (carousel instanceof HTMLElement) {
            carousel.addEventListener('touchstart', (e: TouchEvent) => {
                touchStartX = e.changedTouches[0].screenX;
            }, { passive: true });
            
            carousel.addEventListener('touchend', (e: TouchEvent) => {
                touchEndX = e.changedTouches[0].screenX;
                handleSwipe();
            }, { passive: true });
            
            function handleSwipe() {
                if (touchEndX < touchStartX - 50) {
                    // Swipe left, go to next slide
                    currentSlide = (currentSlide + 1) % slideCount;
                    updateTrack();
                } else if (touchEndX > touchStartX + 50) {
                    // Swipe right, go to previous slide
                    currentSlide = (currentSlide - 1 + slideCount) % slideCount;
                    updateTrack();
                }
            }
        }
        
        // Auto-advance the carousel
        let autoplayInterval = setInterval(() => {
            currentSlide = (currentSlide + 1) % slideCount;
            updateTrack();
        }, 5000);
        
        // Pause autoplay on hover
        carousel.addEventListener('mouseenter', () => {
            clearInterval(autoplayInterval);
        });
        
        // Resume autoplay when mouse leaves
        carousel.addEventListener('mouseleave', () => {
            autoplayInterval = setInterval(() => {
                currentSlide = (currentSlide + 1) % slideCount;
                updateTrack();
            }, 5000);
        });
    });
});

            document.addEventListener('DOMContentLoaded', function() {
        // Classes carousel
        const classesCards = document.querySelectorAll('.class-card');
        const prevBtn = document.getElementById('classPrevBtn');
        const nextBtn = document.getElementById('classNextBtn');
        const indicators = document.querySelectorAll('.classes-carousel .rounded-full[data-index]');
        
        if (classesCards.length && prevBtn && nextBtn) {
          let currentIndex = 0;
          const totalCards = classesCards.length;
          
          // Function to update active card with 3D effects
          function updateActiveCard(newIndex) {
            // Update current index
            currentIndex = newIndex;
            
            // Update all cards
            classesCards.forEach((card, index) => {
              if (card instanceof HTMLElement) {
          if (index === currentIndex) {
            // Active card
            card.style.opacity = '1';
            card.style.transform = 'translateZ(0) rotateY(0deg)';
            card.style.zIndex = '20';
          } else if (index === ((currentIndex - 1 + totalCards) % totalCards)) {
            // Previous card - position to the left with rotation
            card.style.opacity = '0.5';
            card.style.transform = 'translateX(-70%) translateZ(-100px) rotateY(25deg)';
            card.style.zIndex = '10';
          } else if (index === ((currentIndex + 1) % totalCards)) {
            // Next card - position to the right with rotation
            card.style.opacity = '0.5';
            card.style.transform = 'translateX(70%) translateZ(-100px) rotateY(-25deg)';
            card.style.zIndex = '10';
          } else {
            // Hidden cards
            card.style.opacity = '0';
            card.style.zIndex = '0';
          }
              }
            });
            
            // Update indicators
            indicators.forEach((dot, index) => {
              if (index === currentIndex) {
          dot.classList.add('bg-cyan-400', 'scale-125');
          dot.classList.remove('bg-white/30');
              } else {
          dot.classList.remove('bg-cyan-400', 'scale-125');
          dot.classList.add('bg-white/30');
              }
            });
          }
          
          // Initial setup
          updateActiveCard(0);
          
          // Previous button click handler
          prevBtn.addEventListener('click', (e) => {
            e.stopPropagation(); // Prevent click from bubbling to the card
            const newIndex = (currentIndex - 1 + totalCards) % totalCards;
            updateActiveCard(newIndex);
          });
          
          // Next button click handler
          nextBtn.addEventListener('click', (e) => {
            e.stopPropagation(); // Prevent click from bubbling to the card
            const newIndex = (currentIndex + 1) % totalCards;
            updateActiveCard(newIndex);
          });
          
          // Indicator click handler
          indicators.forEach((dot, index) => {
            dot.addEventListener('click', (e) => {
              e.stopPropagation(); // Prevent click from bubbling to the card
              updateActiveCard(index);
            });
          });
          
          // Make active card clickable
          classesCards.forEach((card) => {
            card.addEventListener('click', function() {
              const href = this.getAttribute('data-href');
              if (href && this.style.opacity === '1') {
          window.location.href = href;
              }
            });
          });
          
          // Auto-rotation
          let autoRotateInterval = setInterval(() => {
            const newIndex = (currentIndex + 1) % totalCards;
            updateActiveCard(newIndex);
          }, 5000);
          
          // Pause auto-rotation on hover
          const carouselContainer = document.querySelector('.classes-carousel');
          carouselContainer.addEventListener('mouseenter', () => {
            clearInterval(autoRotateInterval);
          });
          
          carouselContainer.addEventListener('mouseleave', () => {
            autoRotateInterval = setInterval(() => {
              const newIndex = (currentIndex + 1) % totalCards;
              updateActiveCard(newIndex);
            }, 5000);
          });
          
          // Optional: Touch swipe support
          let touchStartX = 0;
          carouselContainer.addEventListener('touchstart', (e) => {
            touchStartX = e.changedTouches[0].screenX;
          }, { passive: true });
          
          carouselContainer.addEventListener('touchend', (e) => {
            const touchEndX = e.changedTouches[0].screenX;
            const diff = touchStartX - touchEndX;
            
            if (diff > 50) { // Swipe left: next
              const newIndex = (currentIndex + 1) % totalCards;
              updateActiveCard(newIndex);
            } else if (diff < -50) { // Swipe right: previous
              const newIndex = (currentIndex - 1 + totalCards) % totalCards;
              updateActiveCard(newIndex);
            }
          }, { passive: true });
        }
            });

</script>

          


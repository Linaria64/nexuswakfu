---
import ItemModal from "./itemmodal.astro";

interface Props {
  donjonData: {
    id: string;
    data: {
      name: string;
      description: string;
      level: number;
      difficulty: "easy" | "medium" | "hard" | "extreme";
      players: "solo" | "group" | "both";
      region: string;
      boss: string;
      modulated?: boolean; // Propriété pour indiquer si le donjon peut être modulé
      bosses?: Array<{
        name: string;
        description: string;
        hp: number;
        masteries: {
          fire: number;
          water: number;
          earth: number;
          air: number;
        };
        resistances: {
          fire: number;
          water: number;
          earth: number;
          air: number;
        };
      }>;
      salleImage?: string;
      mechanics?: Array<{
        name: string;
        description: string;
      }>;
      rewards?: Array<{
        name: string;
        type: "equipment" | "resource";
        description: string;
        dropRate: number;
        image?: {
          src: string;
          alt: string;
        };
        icon?: {
          src: string;
          alt: string;
        };
        stats?: Array<string>;
      }>;
      strategy?: {
        phases: Array<{
          title: string;
          description: string;
        }>;
        tips: Array<string>;
      };
      steles?: Array<{
        name: string;
        description: string;
      }>;
    };
  };
  isOpen: boolean;
  onClose: string;
}

const { donjonData, isOpen, onClose } = Astro.props;
---

<div
  class={`fixed inset-0 z-50 ${isOpen ? "flex" : "hidden"} items-center justify-center p-2 sm:p-4 bg-black/80 backdrop-blur-sm`}
  data-modal={donjonData.data.name}
  onclick={onClose} 
  role="dialog"
  aria-modal="true"
  aria-labelledby="modal-title"
>
  <div
    class="bg-slate-800 text-white rounded-lg shadow-xl w-full max-w-5xl max-h-[90vh] flex flex-col"
    onclick="event.stopPropagation()" 
  >
    <!-- Modal Header -->
    <header class="p-4 sm:p-5 border-b border-slate-700 flex justify-between items-center sticky top-0 bg-slate-800/90 backdrop-blur-md z-10">
      <h2 id="modal-title" class="text-xl sm:text-2xl font-bold text-sky-400 truncate pr-4">{donjonData.data.name}</h2>
      <button
        type="button"
        class="text-slate-400 hover:text-sky-400 transition-colors flex-shrink-0"
        onclick={onClose}
        aria-label="Close modal"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 sm:h-7 sm:w-7" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </header>

    <!-- Modal Body -->
    <div class="p-4 sm:p-6 overflow-y-auto space-y-6 sm:space-y-8 flex-grow">
      <!-- Section: General Info -->
      <section aria-labelledby="general-info-heading">
        <h3 id="general-info-heading" class="text-lg sm:text-xl font-semibold text-sky-300 mb-3 sm:mb-4">Informations Générales</h3>
        <p class="text-slate-300 mb-4 text-sm sm:text-base leading-relaxed">{donjonData.data.description}</p>
        <div class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-4 gap-3 sm:gap-4">
          <div class="bg-slate-700/50 p-3 rounded-md">
            <p class="text-xs sm:text-sm text-slate-400">Niveau</p>
            <p class="text-md sm:text-lg font-semibold text-white">{donjonData.data.level}</p>
          </div>
          <div class="bg-slate-700/50 p-3 rounded-md">
            <p class="text-xs sm:text-sm text-slate-400">Difficulté</p>
            <p class="text-md sm:text-lg font-semibold text-white capitalize">{donjonData.data.difficulty}</p>
          </div>
          <div class="bg-slate-700/50 p-3 rounded-md">
            <p class="text-xs sm:text-sm text-slate-400">Joueurs</p>
            <p class="text-md sm:text-lg font-semibold text-white">
              {
                donjonData.data.players === "group"
                  ? "3"
                  : donjonData.data.players === "both"
                    ? "6"
                    : donjonData.data.players
              }
            </p>
          </div>
          <div class="bg-slate-700/50 p-3 rounded-md">
            <p class="text-xs sm:text-sm text-slate-400">Région</p>
            <p class="text-md sm:text-lg font-semibold text-white">{donjonData.data.region}</p>
          </div>
        </div>
      </section>

      <!-- Section: Bosses -->
      {donjonData.data.bosses && donjonData.data.bosses.length > 0 && (
        <section aria-labelledby="bosses-heading">
          <h3 id="bosses-heading" class="text-lg sm:text-xl font-semibold text-sky-300 mb-3 sm:mb-4">Boss</h3>
          <div class="space-y-4">
            {donjonData.data.bosses.map((boss) => (
              <div class="bg-slate-700/50 p-3 sm:p-4 rounded-md">
                <h4 class="text-md sm:text-lg font-semibold text-sky-400 mb-2">{boss.name}</h4>
                <p class="text-slate-300 mb-3 text-xs sm:text-sm">{boss.description}</p>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
                  <div class="bg-slate-600/50 p-2 rounded">
                    <h5 class="text-xs text-slate-400 flex items-center">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 sm:h-4 sm:w-4 mr-1 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd" />
                      </svg>
                      PV de base
                    </h5>
                    <p class="text-sm sm:text-md font-bold text-white">{boss.hp}</p>
                  </div>
                  <div class="bg-slate-600/50 p-2 rounded">
                    <h5 class="text-xs text-slate-400 mb-1">Maîtrises</h5>
                    <ul class="text-xs sm:text-sm space-y-0.5">
                      {Object.entries(boss.masteries).map(([element, value]) => (
                        <li class="text-slate-200">
                          <span class="capitalize">{element}</span>: <span class={`font-semibold ${value > 0 ? "text-yellow-300" : "text-slate-200"}`}>{value}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                  <div class="bg-slate-600/50 p-2 rounded">
                    <h5 class="text-xs text-slate-400 mb-1">Résistances</h5>
                    <ul class="text-xs sm:text-sm space-y-0.5">
                      {Object.entries(boss.resistances).map(([element, value]) => (
                        <li class="text-slate-200">
                          <span class="capitalize">{element}</span>: <span class="font-semibold text-teal-300">{value}%</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>
      )}

      <!-- Section: Salle Image -->
      {donjonData.data.salleImage && (
        <section aria-labelledby="salle-image-heading">
          <h3 id="salle-image-heading" class="text-lg sm:text-xl font-semibold text-sky-300 mb-3 sm:mb-4">Aperçu de la Salle</h3>
          <div class="bg-slate-700/50 p-1 rounded-md overflow-hidden">
            <img
              src={donjonData.data.salleImage.src}
              alt={donjonData.data.salleImage.alt || `Salle de ${donjonData.data.name}`}
              class="w-full rounded-sm shadow-lg object-cover max-h-72 sm:max-h-96"
              loading="lazy"
            />
          </div>
        </section>
      )}

      <!-- Section: Stratégie (Mécaniques & Stèles) -->
      {(donjonData.data.mechanics && donjonData.data.mechanics.length > 0) || (donjonData.data.steles && donjonData.data.steles.length > 0) ? (
        <section aria-labelledby="strategy-heading">
          <h3 id="strategy-heading" class="text-lg sm:text-xl font-semibold text-sky-300 mb-3 sm:mb-4">Stratégie & Mécaniques</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        {donjonData.data.mechanics && donjonData.data.mechanics.length > 0 && (
          <div class="space-y-3">
            <h4 class="text-md sm:text-lg font-semibold text-sky-400">Mécaniques</h4>
            {donjonData.data.mechanics.map((mechanic) => (
          <div class="bg-slate-700/50 p-3 rounded-md">
            <h5 class="text-sm sm:text-md font-semibold text-sky-300 mb-2">{mechanic.name}</h5>
            {/* Split description by periods and line breaks to create steps */}
            <ol class="space-y-2 pl-1">
              {mechanic.description.split(/(?:\. |\.\n|\\n)/g)
            .filter(step => step.trim().length > 0)
            .map((step, index) => (
              <li class="text-slate-300 text-xs sm:text-sm flex items-start gap-2 leading-relaxed">
                <span class="bg-sky-500/20 text-sky-300 rounded-full flex items-center justify-center h-5 w-5 mt-0.5 flex-shrink-0 font-medium text-xs">
              {index + 1}
                </span>
                <span>{step.trim()}{!step.trim().endsWith('.') ? '.' : ''}</span>
              </li>
              ))}
            </ol>
          </div>
            ))}
          </div>
        )}
        {donjonData.data.steles && donjonData.data.steles.length > 0 && (
          <div class="space-y-3">
            <h4 class="text-md sm:text-lg font-semibold text-sky-400">Stèles</h4>
            {donjonData.data.steles.map((stele) => (
          <div class="bg-slate-700/50 p-3 rounded-md hover:bg-slate-700 transition-colors">
            <h5 class="text-sm sm:text-md font-semibold text-sky-300 mb-1">{stele.name}</h5>
            <p class="text-slate-300 text-xs sm:text-sm">{stele.description}</p>
          </div>
            ))}
          </div>
        )}
          </div>
        </section>
      ) : null}


      <!-- Section: Récompenses -->
      {donjonData.data.rewards && donjonData.data.rewards.length > 0 && (
        <section aria-labelledby="rewards-heading">
          <h3 id="rewards-heading" class="text-lg sm:text-xl font-semibold text-sky-300 mb-3 sm:mb-4">Récompenses Notables</h3>
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
            <div>
              <h4 class="text-md sm:text-lg font-semibold text-sky-400 mb-2">Équipements</h4>
              <div class="space-y-3">
                {donjonData.data.rewards.filter(reward => reward.type === 'equipment').length > 0 ?
                  donjonData.data.rewards.filter(reward => reward.type === 'equipment').map(reward => (
                  <div class="bg-slate-700/50 p-3 rounded-md hover:bg-slate-700 transition-colors cursor-pointer" onclick={`openItemModal('${reward.name}')`}>
                    <div class="flex items-center gap-3">
                      {reward.image && (
                        <img src={reward.image.src} alt={reward.image.alt || reward.name} class="w-10 h-10 sm:w-12 sm:h-12 rounded-md object-contain bg-slate-600/50 p-0.5" loading="lazy" />
                      )}
                      <div class="flex-1">
                        <div class="flex items-center gap-1.5">
                           {reward.icon && <img src={reward.icon.src} alt={reward.icon.alt || ''} class="w-4 h-4 sm:w-5 sm:h-5" loading="lazy" />}
                          <h5 class="text-sm sm:text-md font-semibold text-sky-300">{reward.name}</h5>
                        </div>
                        <p class="text-xs text-slate-400 mt-0.5 line-clamp-2">{reward.description}</p>
                      </div>
                    </div>
                     <div class="flex justify-end mt-1.5">
                        <span class="text-xs text-sky-400 font-medium px-1.5 py-0.5 bg-slate-600/70 rounded">
                          Drop: {reward.dropRate}%
                        </span>
                      </div>
                  </div>
                )) : <p class="text-slate-400 italic text-sm">Aucun équipement notable listé.</p>}
              </div>
            </div>

            <div>
              <h4 class="text-md sm:text-lg font-semibold text-sky-400 mb-2">Ressources</h4>
              <div class="space-y-3">
                 {donjonData.data.rewards.filter(reward => reward.type === 'resource').length > 0 ?
                  donjonData.data.rewards.filter(reward => reward.type === 'resource').map(reward => (
                  <div class="bg-slate-700/50 p-3 rounded-md hover:bg-slate-700 transition-colors cursor-pointer" onclick={`openItemModal('${reward.name}')`}>
                     <div class="flex items-center gap-3">
                      {reward.image && (
                        <img src={reward.image.src} alt={reward.image.alt || reward.name} class="w-10 h-10 sm:w-12 sm:h-12 rounded-md object-contain bg-slate-600/50 p-0.5" loading="lazy" />
                      )}
                      <div class="flex-1">
                        <div class="flex items-center gap-1.5">
                           {reward.icon && <img src={reward.icon.src} alt={reward.icon.alt || ''} class="w-4 h-4 sm:w-5 sm:h-5" loading="lazy" />}
                          <h5 class="text-sm sm:text-md font-semibold text-sky-300">{reward.name}</h5>
                        </div>
                        <p class="text-xs text-slate-400 mt-0.5 line-clamp-2">{reward.description}</p>
                      </div>
                    </div>
                    <div class="flex justify-end mt-1.5">
                      <span class="text-xs text-sky-400 font-medium px-1.5 py-0.5 bg-slate-600/70 rounded">
                        Drop: {reward.dropRate}%
                      </span>
                    </div>
                  </div>
                )) : <p class="text-slate-400 italic text-sm">Aucune ressource notable listée.</p>}
              </div>
            </div>
          </div>
        </section>
      )}

      <!-- "Voir tous les drops" Link -->
      <div class="mt-auto pt-4 text-center">
        <a
          href={`https://www.wakfu.com/fr/mmorpg/encyclopedie/monstres/${donjonData.data.id}`}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center gap-2 px-3 py-1.5 sm:px-4 sm:py-2 bg-sky-600 hover:bg-sky-500 text-white rounded-lg transition-colors shadow-md text-xs sm:text-sm"
        >
          <span>Voir tous les drops sur l'Encyclopédie</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 sm:h-4 sm:w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg>
        </a>
      </div>
    </div>
  </div>
</div>

<!-- Item Modals -->
{
  donjonData &&
    donjonData.data &&
    donjonData.data.rewards?.map((reward) => (
      <ItemModal
        item={reward}
        isOpen={false}
        onClose={`closeItemModal('${reward.name}')`}
      />
    ))
}

<script is:inline>
  // Définir les fonctions globalement
  if (typeof window !== "undefined") {
    window.openItemModal = (itemName) => {
      const modal = document.querySelector(`[data-item-modal="${itemName}"]`);
      if (modal) {
        modal.classList.remove("hidden");
        modal.classList.add("flex");
      }
    };

    window.closeItemModal = (itemName) => {
      const modal = document.querySelector(`[data-item-modal="${itemName}"]`);
      if (modal) {
        modal.classList.remove("flex");
        modal.classList.add("hidden");
      }
    };
  }
</script>
